/**
 * üì¶ registro.js
 * 
 * Descripci√≥n:
 * Este archivo maneja la l√≥gica de registro de nuevos usuarios en TianguiStore. 
 * Permite al usuario registrar su correo electr√≥nico y contrase√±a, con validaciones en el formulario antes de enviarlo.
 * Tambi√©n maneja los mensajes de error y √©xito en la interfaz y realiza la solicitud al backend para registrar al usuario.
 * 
 * Funciones:
 * - Validaci√≥n del correo electr√≥nico y la contrase√±a.
 * - Env√≠o de los datos de registro al backend.
 * - Manejo de los mensajes de error y √©xito.
 * 
 * Autor: I.S.C. Erick Renato Vega Ceron
 * Fecha de Creaci√≥n: Mayo 2025
 */

document.addEventListener("DOMContentLoaded", () => {
  const form = document.getElementById("registroForm");
  const email = document.getElementById("email");
  const password = document.getElementById("password");
  const mensajeError = document.getElementById("mensajeError");
  const mensajeExito = document.getElementById("mensajeExito");

  // Expresiones regulares para validar correo y contrase√±a
  const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
  const passwordRegex = /^(?=.*[A-Z])(?=.*\d).{8,}$/;

  // Evento para manejar el env√≠o del formulario
  form.addEventListener("submit", async (event) => {
    event.preventDefault();
    ocultarMensajes(); // Ocultar mensajes previos

    const correo = email.value.trim();
    const contrasena = password.value.trim();
    let esValido = true;

    // Validaci√≥n del correo electr√≥nico
    if (!emailRegex.test(correo)) {
      email.classList.add("is-invalid");
      mostrarError("‚ö†Ô∏è Ingrese un correo electr√≥nico v√°lido.");
      esValido = false;
    } else {
      email.classList.remove("is-invalid");
    }

    // Validaci√≥n de la contrase√±a
    if (!passwordRegex.test(contrasena)) {
      password.classList.add("is-invalid");
      mostrarError("‚ö†Ô∏è La contrase√±a debe tener m√≠nimo 8 caracteres, una may√∫scula y un n√∫mero.");
      esValido = false;
    } else {
      password.classList.remove("is-invalid");
    }

    // Si el formulario no es v√°lido, mostrar el mensaje de error y detener el proceso
    if (!esValido) {
      mensajeError.scrollIntoView({ behavior: "smooth" });
      return;
    }

    // Si todo est√° v√°lido, hacer la solicitud al backend
    try {
      const response = await fetch("/auth/registro", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({
          correo_electronico: correo,
          contrasena: contrasena,
          nombre: "Usuario" // Este campo puede ser personalizado si el formulario incluye nombre
        }),
      });

      const data = await response.json();

      // Manejo de errores si la respuesta no es exitosa
      if (!response.ok) {
        mostrarError(data.message || "‚ùå Error durante el registro.");
        return;
      }

      // Mostrar mensaje de √©xito y redirigir al inicio de sesi√≥n
      mostrarExito("‚úÖ Registro exitoso. Redirigiendo al inicio de sesi√≥n...");
      form.reset(); // Limpiar el formulario
      setTimeout(() => window.location.href = "login.html", 2000); // Redirigir despu√©s de 2 segundos

    } catch (error) {
      console.error("‚ùå Error en el registro:", error);
      mostrarError("‚ö†Ô∏è No se pudo conectar con el servidor.");
    }
  });

  // Funci√≥n para mostrar un mensaje de error
  function mostrarError(msg) {
    mensajeError.textContent = msg;
    mensajeError.classList.remove("d-none"); // Mostrar el mensaje de error
  }

  // Funci√≥n para mostrar un mensaje de √©xito
  function mostrarExito(msg) {
    mensajeExito.textContent = msg;
    mensajeExito.classList.remove("d-none"); // Mostrar el mensaje de √©xito
  }

  // Funci√≥n para ocultar todos los mensajes (error o √©xito)
  function ocultarMensajes() {
    mensajeError.classList.add("d-none"); // Ocultar el mensaje de error
    mensajeExito.classList.add("d-none"); // Ocultar el mensaje de √©xito
    email.classList.remove("is-invalid"); // Eliminar clase de error del campo correo
    password.classList.remove("is-invalid"); // Eliminar clase de error del campo contrase√±a
  }
});
